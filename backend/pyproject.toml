[project]
name = "animusic"
version = "0.1.0"
description = "A backend"
authors = [{ "name" = "Matthew Lee" }]
license = "MIT"
keywords = ["scripts"]
classifiers = ["Programming Language :: Python :: 3"]
dependencies = [
    "aiohappyeyeballs==2.6.1",
    "aiohttp==3.11.18",
    "aiosignal==1.3.2",
    "annotated-types==0.7.0",
    "anyio==4.9.0",
    "attrs==25.3.0",
    "certifi==2025.1.31",
    "charset-normalizer==3.4.1",
    "click==8.1.6",
    "deprecation==2.1.0",
    "frozenlist==1.6.0",
    "gotrue==2.12.0",
    "h11==0.14.0",
    "h2==4.2.0",
    "hpack==4.1.0",
    "httpcore==1.0.8",
    "httpx==0.28.1",
    "hyperframe==6.1.0",
    "idna==3.10",
    "iniconfig==2.1.0",
    "multidict==6.4.3",
    "packaging==25.0",
    "pluggy==1.5.0",
    "postgrest==1.0.1",
    "propcache==0.3.1",
    "pydantic==2.11.3",
    "pydantic_core==2.33.1",
    "PyJWT==2.10.1",
    "pytest==8.3.5",
    "pytest-mock==3.14.0",
    "python-dateutil==2.9.0.post0",
    "python-dotenv==1.1.0",
    "realtime==2.4.2",
    "requests==2.32.3",
    "six==1.17.0",
    "sniffio==1.3.1",
    "storage3==0.11.3",
    "StrEnum==0.4.15",
    "supabase==2.15.0",
    "supafunc==0.9.4",
    "typing-inspection==0.4.0",
    "typing_extensions==4.13.2",
    "urllib3==2.4.0",
    "websockets==14.2",
    "yarl==1.20.0"
]

[project.optional-dependencies]
dev = [
    "black",
    "Cython",
    "flake8",
    "mypy",
    "pytest-mypy",
    "Flake8-pyproject"
]
test = [
    "pytest",
    "pytest-cov"
]

[tool.pytest.ini_options]
addopts = "--verbose -ra"
minversion = "6.0"
testpaths = ["tests"]

[tool.coverage.run]
source = ["src"]

[tool.flake8]
exclude = ".venv,__pycache__"
ignore = ['E231', 'E241']
per-file-ignores = [
    '__init__.py:F401',
]
max-line-length = 100
count = true

[tool.mypy]
strict = true
ignore_missing_imports = true

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | dist
  )/
  | foo.py      # also separately exclude a file named foo.py
)
'''

[build-system]
requires = ["setuptools>=61.0", "wheel", "Cython"]
build-backend = "setuptools.build_meta"

[project.entry-points."console_scripts"]
song_importer = "importer.song_importer:main"
